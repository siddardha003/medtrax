import { JWT } from 'google-auth-library';
import { categoryKeys } from './constants';

export async function getCategories() {
  if (
    !(
      process.env.GOOGLE_SERVICE_ACCOUNT_CLIENT_EMAIL &&
      process.env.GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY &&
      process.env.GOOGLE_SPREADSHEET_ID_CATEGORY
    )
  ) {
    throw new Error(
      'GOOGLE credentials must be set as env vars `GOOGLE_SERVICE_ACCOUNT_CLIENT_EMAIL` ,`GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY` and `GOOGLE_SPREADSHEET_ID_CATEGORY`.'
    );
  }
  const { GoogleSpreadsheet } = require('google-spreadsheet');
  const serviceAccountAuth = new JWT({
    // env var values here are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    email: process.env.GOOGLE_SERVICE_ACCOUNT_CLIENT_EMAIL,
    key: process.env.GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY,
    scopes: ['https://www.googleapis.com/auth/spreadsheets'],
  });
  const doc = new GoogleSpreadsheet(
    process.env.GOOGLE_SPREADSHEET_ID_PRODUCT,
    serviceAccountAuth
  );

  await doc.loadInfo(); // loads document properties and worksheets
  const sheet = doc.sheetsByIndex[0]; // or use doc.sheetsById[id]
  // read rows
  const rows = await sheet.getRows(); // can pass in { limit, offset }

  // {
  //   id: '12',
  //   name: 'Face & Skin Care',
  //   slug: 'faceskincare',
  //   image_icon_url: 'https://s3.amazonaws.com/redqteam.com/medsy/category/Face-and-skin-care.png'
  // }

  const categories = rows
    ?.map(({ _sheet, _rowNumber, _rawData, deleted }) => ({
      ..._rawData,
    }))
    ?.map((item: any) => {
      const transformedCategories = Object.fromEntries(
        Object.entries(item).map(([key, val]: any) => [categoryKeys[key], val])
      );
      return transformedCategories;
    });

  return categories;
}
